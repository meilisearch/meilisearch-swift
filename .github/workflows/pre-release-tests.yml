# Testing the code base against the Meilisearch pre-releases
name: Pre-Release Tests

# Will only run for PRs and pushes to bump-meilisearch-v*
on:
  push:
    branches: [bump-meilisearch-v*]
  pull_request:
    branches: [bump-meilisearch-v*]

jobs:
  integration_tests:
    name: integration-tests on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ["macos-latest", "ubuntu-20.04"]
    env:
      DEVELOPER_DIR: /Applications/Xcode_12.4.app/Contents/Developer
    steps:
      - uses: actions/checkout@v3
      - name: Download the latest stable version of Meilisearch
        run: |
          # This script is used in the SDK CIs to fetch the latest Meilisearch RC name (ex: v0.16.0rc2).
          # The Meilisearch RC is needed when maintainers are developing features during the pre-release week because the final Meilisearch release is not out yet.

          temp_file='temp_file' # temp_file needed because `grep` would start before the download is over
          curl -s 'https://api.github.com/repos/meilisearch/meilisearch/releases' > "$temp_file"
          cat temp_file
          latest_rc_release=$(cat "$temp_file" \
              | grep -E 'tag_name' | grep 'rc' | head -1 \
              | tr -d ',"' | cut -d ':' -f2 | tr -d ' ')
          echo latest_rc_release
          rm -rf "$temp_file"
          echo "$latest_rc_release"
          echo "MEILISEARCH_VERSION=$latest_rc_release" >> $GITHUB_ENV
      - name: Download Meilisearch (${{ env.MEILISEARCH_VERSION }})
        run: |
          curl https://github.com/meilisearch/meilisearch/releases/download/${{ env.MEILISEARCH_VERSION }}/meilisearch-macos-amd64 --output meilisearch --location
          chmod +x meilisearch

      - name: Run Meilisearch
        run: |
          ./meilisearch --master-key=masterKey --no-analytics &
      - name: Run tests
        run: swift test
